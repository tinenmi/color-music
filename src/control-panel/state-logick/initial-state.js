import immutable from 'object-path-immutable'

const colorProgramBase = [
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[0,255,0], [0,0,255], [0,0,0], [255,0,0]],
    [[0,0,255], [0,0,0], [255,0,0], [0,255,0]],
    [[0,0,0], [255,0,0], [0,255,0], [0,0,255]],
    [[255,0,0], [0,255,0], [0,0,255], [0,0,0]]
]

const colorProgram_chunk =
colorProgramBase.map( tact => ({
    active: false,
    cells: tact.map(
      (lamp) =>
      ({color: {red: lamp[0], green: lamp[1], blue: lamp[2]}, selected: false})
    )
  }))


const cursor = {tactIndex: 2}
const selected = {tactIndex: 1, cellIndex: 0}

const selectedLampColor = {red: 0, green: 255, blue: 0}

const isPlayed = false;
const isSmoothly = false;
const isMagick = false;
const magickColor = null;
const speed = "";

let colorProgram = immutable.set(colorProgram_chunk, [cursor.tactIndex, 'active'], true)
colorProgram = immutable.set(colorProgram, [selected.tactIndex, 'cells', selected.cellIndex,
'selected'], true)

export default {colorProgram, cursor, selected, selectedLampColor, isPlayed,
  isSmoothly, isMagick, magickColor, speed}
